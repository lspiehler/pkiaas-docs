{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to PKIaaS.io Documentation","text":"<p>Thank you for visiting the documentation for PKIaaS.io. This site is under construction. Contributers are welcome!</p> <p>PKIaaS.io is here to make PKI functionality\u2014usually limited to costly, complex platforms designed for enterprise customers\u2014accessible to a broader audience. PKIaaS.io was designed to serve not only small to medium-sized businesses but also home lab users, developers, testers, and PKI enthusiasts of all kinds!</p> <p>My name is Lyas Spiehler, and I was inspired to create PKIaaS.io out of a passion and curiosity for PKI, as well as a desire to fill the gap in accessible resources for learning about and easily generating x509 certificates. PKIaaS.io enables the creation of all types of certificates\u2014including SMIME, code signing, TLS/SSL, document signing, and more\u2014while offering comprehensive services you\u2019d expect from a robust PKI platform, such as CRL, OCSP, SCEP, ACME, timestamping, certificate transparency (SCT), etc.</p> <p>If you're new to PKIaaS.io, be sure to check out our Getting Started\ud83d\udc48 guide!</p>"},{"location":"getting-started/","title":"Getting Started","text":""},{"location":"getting-started/#login","title":"Login","text":"<p>Getting started with PKIaaS.io is easy! All you need to do is click \"Manage PKI\" at the top right of the main page and choose the login you'd like to use.</p>"},{"location":"getting-started/#create-a-certificate-authority","title":"Create a Certificate Authority","text":"<p>All the certificates you'll create need to be signed by a certificate authority, so the first step is to create one. Navigating to any other page of the site before you've created a CA will redirect you back to a page forcing you to create one. If you're logging in for the first time, and you haven't created a CA before, you'll be asked to choose between a managed CA and a CA backed by an HSM. If you're new to PKI or you'd just like to take PKIaaS.io for a test drive, it would be best to choose the managed option to get going more quickly. Read more about these options here.</p>"},{"location":"getting-started/#ca-configuration-options","title":"CA Configuration Options","text":"<p>If you're still learning about PKI, feel free to use the default options and just update the name when creating your first CA. This is the easiest option to start issuing certificates and getting a feel for the site. When you're done choosing options, click \"Create New CA\". You'll then be redirected to the \"Manage CAs\" page and your new CA will appear in the drop down at the top of the page.</p>"},{"location":"getting-started/#switch-cas","title":"Switch CAs","text":"<p>If you create more than one CA, you'll have the option of switching between them by selecting the one you'd like to manage from the dropdown at the top of the PKI management page to the right of the navigation pane. All other pages on the site will show only the resources\u2014templates, certificates, services, etc.\u2014within the context of the selected CA.</p>"},{"location":"getting-started/#using-your-new-ca","title":"Using Your New CA","text":"<p>Select the CA you want to work with from the dropdown at the top to the right of the navigation pane. This dropdown changes the scope of the site to manage the active CA. All actions performed\u2014signing certificates, creating templates, creating ACME policies, etc.\u2014will be done within the context of the selected CA.</p>"},{"location":"getting-started/#certificate-templates","title":"Certificate Templates","text":""},{"location":"getting-started/#manage-templates","title":"Manage Templates","text":"<p>Certificate templates can be managed by navigating to Certificate Templates -&gt; Manage Templates in the navigation pane on the left of the page. Certificate templates are used to enforce compliance of predefined standards for issuing certificates with your CA. These standards include key usages, subject attributes, basic constraints, and other certificate attributes. The use of templates is important to prevent accidental mis-issuance and to ensure that issued certificates are compliant with your security practices. All certificate signing on PKIaaS.io will be associated with a template.</p>"},{"location":"getting-started/#create-new-templates","title":"Create New Templates","text":"<p>By default, a \"Web Server\" template is automatically built for every CA that is created. This template has a good out-of-the-box configuration for issuing TLS/SSL certificates for web servers, but new, custom certificate templates can be created by navigating to Certificate Templates -&gt; Create Template. Enter a name for the template and choose default settings by selecting an option from the \"Starter Template\" dropdown. Click \"Create Template\" to proceed to the configuration page, where the template options can be customized. See more information on the available options here.  Once satisfied with the settings, click \"Save\" to finalize the changes and return to the template management page.</p>"},{"location":"getting-started/#issue-a-certificate","title":"Issue a Certificate","text":"<p>In the navigation page on the left, navigate to Certificate Templates -&gt; Manage Templates and click on the template you'd like to use. From the menu, you can choose either, \"Public Certificate Request\", \"Submit CSR\", or \"Create Pre-Approved Request.\" These options support various workflows for issuing certificates.</p>"},{"location":"getting-started/#public-certificate-request","title":"Public Certificate Request","text":"<p>If your workflow involves receiving certificate requests from users, the \"Public Certificate Request\" option allows you to send an email to users inviting them to easily submit a certificate request. It also shows the public URL that can be shared for others to submit a certificate request. This option allows users to submit a CSR or fill out a form containing the desired subject attributes and SANs. The latter option can be helpful for users that are not familiar with x509 certificates and includes an option to generate a private key automatically in the browser when the user claims their certificate after it is approved. To review and approve these requests, navigate to X509 Certificates -&gt; Pending Requests.</p>"},{"location":"getting-started/#submit-csr","title":"Submit CSR","text":"<p>The \"Submit CSR\" option provides an input field to paste the contents of a certificate signing request. To review and approve these requests, navigate to X509 Certificates -&gt; Pending Requests.</p>"},{"location":"getting-started/#create-pre-approved-request","title":"Create Pre-Approved Request","text":"<p>The \"Create Pre-Approved Request\" feature enables a PKI administrator to pre-configure all the settings typically chosen during the approval process for a pending certificate request. The administrator can either redeem the certificate immediately or send an email to the user, inviting them to claim it. In the certificate claim workflow, the user can set a password to protect the PKCS#12 file, and a 2048-bit RSA private key will be generated in the browser. Alternatively, a CSR can be submitted, however, the subject attributes and SANs specified in it will be overridden by the pre-approved attributes in the signed certificate.</p>"},{"location":"getting-started/#approve-pending-certificate-requests","title":"Approve Pending Certificate Requests","text":"<p>Certificates requested using the \"Public Certificate Request\" or \"Submit CSR\" options require approval. The requests pending approval can be found by navigating to X509 Certificates -&gt; Pending Requests. Here you will find options to Approve, Sign, Decline, or Re-Send emails for various types of certificate requests. Not all options are available for all types of certificate request workflows. These options can be performed in bulk, or the requests can be selected individually where additional options are provided to override subject attributes, subject alternative names (SANs), and to customize the validity time of the certificate instead of taking the template default.</p>"},{"location":"certificate-authorities/create/","title":"Certificate Authorities","text":""},{"location":"certificate-authorities/overview/","title":"Certificate Authorities","text":""},{"location":"certificate-authorities/overview/#overview","title":"Overview","text":"<p>A certificate authority (CA) serves as the cornerstone of everything on PKIaaS.io. Tasks like working with templates, issuing certificates, and managing ACME policies all operate within the scope of a CA. As such, the first step upon signing into PKIaaS.io is creating a CA. Users will be automatically redirected to a setup page and prompted to create a CA before accessing other features on the site.</p> <p>Users can choose between creating a managed CA or one backed by an HSM. With a managed CA, the private key is securely stored using AES-256 encryption, offering a streamlined setup without additional configuration. Alternatively, the HSM-backed option integrates with a PKIaaS.io IoT-HSM, enabling key management via a YubiKey 5. In this setup, all signing operations are routed to the IoT-HSM, where they are processed by the YubiKey. For detailed guidance on creating a CA with IoT-HSM, refer to the IoT-HSM documentation.</p>"},{"location":"certificate-authorities/overview/#options","title":"Options","text":""},{"location":"certificate-authorities/overview/#subject-attributes","title":"Subject Attributes","text":"<p>When creating a certificate authority (CA), users are provided with a range of flexible options to tailor their setup. The first six fields customize the subject attributes of the CA, with only the \"Certificate Authority Name\" (common name) being mandatory.</p>"},{"location":"certificate-authorities/overview/#private-key","title":"Private Key","text":"<p>Next, users can configure the private key settings. Various types of private key types are supported including RSA, ECC, and CRYSTALS-dilithium. Here, users can also opt to use HSM (as previously mentioned) or import an existing private key.</p>"},{"location":"certificate-authorities/overview/#hash-algorithm-validity-and-path-length","title":"Hash Algorithm, Validity, and Path Length","text":"<p>Further customization options include selecting the signature hash algorithm, specifying the path length, and setting the certificate authority's validity period. The signature algorithm chosen here determines how the CA's certificate is self-signed. Depending on the private key used, additional signature options may become available for signing certificates within the certificate templates after the CA is established. For more details on \"Path Length,\" refer to RFC5280, which explains the \"basic constraints\" x509v3 attributes.</p>"},{"location":"certificate-authorities/overview/#key-usage","title":"Key Usage","text":"<p>It is not recommended to make changes to the default \"Key Usage\" and \"Extended Key Usage\" options. Making changes could result in issues with your certificate authority.</p>"},{"location":"certificate-authorities/overview/#intermediate-ca","title":"Intermediate CA","text":"<p>Finally, the \"CSR Only\" option is designed for cases where the CA being created will function as an intermediate or subordinate certificate authority rather than a root CA. This option generates a Certificate Signing Request (CSR) that must be signed by another CA. The signing can be performed by an external CA (such as Microsoft or EJBCA) or another PKIaaS.io CA. Once the signed certificate is obtained, it must be imported before the CA can be activated and used.</p>"},{"location":"certificate-templates/create/","title":"Create Templates","text":"<p>To create a new certificate template, navigate to Certificate Templates -&gt; Create Template. Enter a name for the template and choose default settings by selecting an option from the \"Starter Template\" dropdown. Click \"Create Template\" to proceed to the configuration page, where the template options can be customized. Once satisfied with the settings, click \"Save\" to finalize the changes and return to the template management page.</p>"},{"location":"certificate-templates/delete/","title":"Delete Templates","text":"<p>To delete a certificate template, navigate to Certificate Templates -&gt; Manage Templates in the navigation pane on the left of the page. Click on a template and select \"Edit Template\". If the template has no active certificates, you can use the red Delete button to remove it. Note that all certificates issued under the template must either be expired or revoked, and the revocation reason cannot be \"Certificate Hold\".</p>"},{"location":"certificate-templates/edit/","title":"Edit Templates","text":"<p>To edit the settings for a certificate template, navigate to Certificate Templates -&gt; Manage Templates in the navigation pane on the left of the page. Click on a template and select \"Edit Template\".</p>"},{"location":"certificate-templates/edit/#options","title":"Options","text":""},{"location":"certificate-templates/edit/#general","title":"General","text":"<ul> <li>Enabled - enables/disables the template</li> <li>Allow unsolicited certificate web requests - enables/disables the \"Public Certificate Request\" URL for the template</li> <li>Allow the use of a valid certificate to authorize an automatic renewal request - enables/disables certificate renewal authorization using a previously issued certificate using the renewal options found on the CA's CPS page<ul> <li>Automatically revoke old certificate - revoke the old certificate used to authorize renewal</li> <li>Require certificate to be within - don't allow renewal using a certificate to authorize renewal unless it is within the specified number of days of expiration</li> <li>Copy subject and SANs from original certificate during renewal - use the same subject and subject alternative names from the old certificate used to authorize renewal</li> </ul> </li> <li>Signing Algorithm - customize the hash algorithm used to sign certificates</li> <li>Validity Period (Days) - specify the default length of time the issued certificate will be valid\u2014for manually issued certificates. This option can be overridden at the time of signing when the request is in X509 Certificates -&gt; Pending Requests</li> <li>Description - provide a description for the template</li> </ul>"},{"location":"certificate-templates/edit/#subject","title":"Subject","text":"<p>To honor the subject attributes requested within the CSR, use the Supplied by the CSR option. Otherwise, the subject attributes in the CSR will be overridden by the defaults defined here.</p>"},{"location":"certificate-templates/edit/#key-usage","title":"Key Usage","text":"<p>Select the key usages and extended key usages to be enabled for certificates issued using this template. Custom comma-separated extended key usage OIDs can be entered into the Custom EKU OIDs field.</p>"},{"location":"certificate-templates/edit/#basic-constraints","title":"Basic Constraints","text":"<p>The Basic Constraints extension in an X509 certificate defines whether the certificate is a Certificate Authority (CA) or an end-entity (non-CA) certificate. Set the Certificate Authority option to yes if the template will be used to sign subordinate CAs (intermediate CAs) certificate authorities. Path length defines the maximum number of subordinate CAs that can exist below this certificate in the certificate hierarchy.</p>"},{"location":"certificate-templates/edit/#crl-ocsp-aia-cps","title":"CRL / OCSP / AIA / CPS","text":"<ul> <li>Include AIA Extension in Certificate - The Authority Information Access (AIA) attribute is an optional but commonly included extension in an X.509 certificate. It provides information about how to access important resources or services related to the certificate issuer. Use this option to enable or disable the AIA attribute in certificates issued using this template.<ul> <li>Custom URL - Allows customization of the URL where the issuing CA\u2019s certificate (or chain) can be downloaded.</li> </ul> </li> <li>Include OCSP Extension in Certificate - Enable or disable the OCSP Responder attribute within the AIA extension in certificates issued using this template.</li> <li>Include CRL Extension in Certificate - Enable or disable the CRL Distribution Point (CDP) attribute in certificates issued using this template.</li> <li>Include CPS Extension in Certificate - Enable or disable the Certificate Policies attribute in certificates issued using this template. This attribute contains the URL to the Certificate Practice Statement (CPS) and the policy identifier.<ul> <li>Policy - Disable, select a predefined policy identifier, or enter a custom OID.</li> </ul> </li> </ul>"},{"location":"certificate-templates/edit/#scep","title":"SCEP","text":"<p>Simple Certificate Enrollment Protocol is a protocol designed to simplify the process of managing and issuing digital certificates in a scalable and automated manner. It is commonly used in environments where devices like routers, printers, and mobile devices need to enroll for certificates to enable secure communications. The SCEP URL for the template can be found by navigating to Certificate Templates -&gt; Manage Templates, next click on a template, and choose the Show Template Service URLs option. A modal will appear revealing the template service URLs including the SCEP URL.</p> <ul> <li>Enable SCEP protocol - Enable or disable SCEP for the template.</li> <li>Enable SCEP Static Passphrase - Enable or disable a static passphrase for SCEP services on the template. This may be required for SCEP processes that require the same passphrase to be used for multiple SCEP clients.</li> <li>Enable Microsoft Intune/Endpoint Manager Integration - Enable or disable Microsoft Intune SCEP integration for the template.</li> <li>Strip Root from GetCACert Requests - Exclude the root CA and return only the root in responses to SCEP GetCACert requests.</li> <li>Enable Microsoft SCEP compatibility - Enable or disable the Microsoft SCEP (NDES) compatibility. This option enabled PKIaaS.io to mimic the /CertSrv/mscep_admin/ URL on Microsoft NDES servers to generate \"enrollment challenge passwords\" for processes and workflows designed to work with this Microsoft NDES functionality. The URL for this page can be found by navigating to Certificate Templates -&gt; Manage Templates, next click on a template, and choose the SCEP Admin (Microsoft compatibility) option to navigate to the URL in a new tab.<ul> <li>Enable Microsoft SCEP basic auth - Enable or disable basic HTTP authentication for the Microsoft SCEP compatibility page. A username and password must be provided if this option is selected.</li> </ul> </li> <li>Enable IP ACL - Enable or disable the IP-based access control list (firewall functionality) for access to SCEP requests, the Microsoft compatibility page (if enabled) or both. Enter a list of IPs allowed to access the resources.</li> </ul>"},{"location":"certificate-templates/edit/#ct-logs","title":"CT Logs","text":"<p>For templates associated with root CAs or intermediate CAs that chain up to root CAs that require issued certificates to be submitted to certificate transparency logs, enter a comma-separated list of URLs where these certificates should be submitted here. The CT log must support logging for the CA associated with the template. This is something that must be coordinated with the owner of the CT log.</p>"},{"location":"certificate-templates/overview/","title":"Certificate Templates","text":"<p>Certificate templates are used to enforce compliance of predefined standards for issuing certificates with your certificate authority. These standards include key usages, subject attributes, basic constraints, and other certificate attributes. Certificate templates also serve as the entry point for many of the certificate issuance options on PKIaaS.io. Read more about these certificate issuance options on the getting started page.</p>"},{"location":"certificate-templates/service-urls/","title":"Service URLs","text":"<p>The SCEP services URL, ACME directory URL, and a URL to allow users to make public certificate requests can all be found by navigating to Certificate Templates -&gt; Manage Templates, and then by clicking one of the templates and selecting the Show Template Service URLs option.</p>"},{"location":"iot-hsm/installation/","title":"IoT-HSM","text":""},{"location":"iot-hsm/installation/#installation","title":"Installation","text":"<p>To get started with IoT-HSM, it is recommend to deploy a Long-Term Support (LTS) version of Ubuntu Server. IoT-HSM has been tested on Ubuntu 20.04, 22.04, and 24.04. Once Ubuntu is installed and updated, log in to a terminal shell and execute the following commands as the root user. You can access a root shell by entering <code>sudo su -</code> at the terminal.</p> <pre><code>apt update\napt -y install curl\ncurl -sL https://raw.githubusercontent.com/lspiehler/iot-hsm/master/scripts/setup_ubuntu2004.sh | bash -\n</code></pre> <p>After the script completes, it will be prompt to set a new password twice\u2014this password will be used for the admin account on the IoT-HSM web interface. Once configured, open a browser and navigate to the IP address of the Ubuntu endpoint, prefixed with <code>https://</code>. For example: <code>https://192.168.1.5</code>.</p> <p>See the provisioning documentation to provision a certificate authority for use with IoT-HSM.</p>"},{"location":"iot-hsm/overview/","title":"IoT-HSM","text":""},{"location":"iot-hsm/overview/#overview","title":"Overview","text":"<p>IoT-HSM is a lightweight application designed to enable a persistent connection between one or more YubiKeys and PKIaaS.io. Once deployed and provisioned for a Certificate Authority (CA), it securely forwards all signing requests for the CA from PKIaaS.io to the IoT-HSM, where the connected YubiKey handles the signing. To ensure robust security, all communications with the IoT-HSM are digitally signed with end-to-end encryption via S/MIME.</p> <p>See the installation documentation to get started with IoT-HSM.</p>"},{"location":"iot-hsm/provisioning/","title":"IoT-HSM","text":"<p>If you haven't yet deployed IoT-HSM, see the installation documentation to get started.</p>"},{"location":"iot-hsm/provisioning/#provisioning","title":"Provisioning","text":"<p>In order for a certificate authority on PKIaaS.io to delegate signing operations to a YubiKey managed by IoT-HSM, it must first be provisioned to do so. The first step in this process is to select the \"HSM\" option as the \"Key Type\" when creating a new certificate authority on the Certificate Authorities -&gt; Create new CA page.</p>"},{"location":"use-cases/sample-use-case/","title":"Sample Use Case","text":""},{"location":"use-cases/sample-use-case/#sample-use-case","title":"Sample Use Case","text":""}]}